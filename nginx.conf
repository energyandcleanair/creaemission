events {
  worker_connections 1024;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  upstream shiny {
    server 127.0.0.1:3838;
  }

  upstream titiler {
    server 127.0.0.1:8001;
  }

  server {
    listen 8080;
    server_name _;

    # Serve static COGs from /app/data at /data/
    location /data/ {
      alias /app/data/;
      autoindex on;
      add_header Cache-Control "public, max-age=3600";
    }

    # Proxy TiTiler under /cog/
    location /cog/ {
      proxy_pass http://titiler;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_http_version 1.1;
      proxy_read_timeout 300;

      add_header Access-Control-Allow-Origin *;
      add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
      add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept";

      if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept";
        add_header Content-Length 0;
        add_header Content-Type text/plain;
        return 204;
      }
    }

    # Map specific TiTiler endpoints that live at root
    location = /cog/tileMatrixSets {
      proxy_pass http://titiler/tileMatrixSets;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location = /cog/health {
      proxy_pass http://titiler/health;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Shiny app at root
    location / {
      proxy_pass http://shiny;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_read_timeout 86400;
    }

    # Readiness endpoint â€” only returns 200 when Shiny answers upstream
    location = /ready {
      proxy_pass http://shiny/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_read_timeout 5s;
    }
  }
}

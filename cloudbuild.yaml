# Google Cloud Build configuration for building and deploying to Cloud Run
#
# Usage (manual submit):
#   gcloud builds submit --config cloudbuild.yaml \
#     --substitutions=_SERVICE=creaemission,_REGION=europe-west1,_AR_HOST=europe-west1-docker.pkg.dev,_AR_REPO=containers,_IMAGE=creaemission
#
# Recommended: create a Cloud Build Trigger on the desired branch and set the
# substitutions there so deployments happen automatically on push.
#
# Notes:
# - This builds the Dockerfile at repo root and deploys to Cloud Run.
# - Uses Artifact Registry (recommended). Ensure an AR repo exists:
#     gcloud artifacts repositories create containers \
#       --repository-format=docker --location=europe-west1
# - Ensure the Cloud Build service account has permissions:
#     roles/run.admin, roles/iam.serviceAccountUser, roles/artifactregistry.writer

substitutions:
  # Core
  _SERVICE: creaemission-staging            # Cloud Run service name
  _REGION: europe-west1             # Cloud Run region
  _AR_HOST: europe-west1-docker.pkg.dev   # Artifact Registry host for your region
  _AR_REPO: containers              # Artifact Registry repo name
  _IMAGE: creaemission              # Image name within the repo

  # Runtime settings
  _CPU: "2"                         # vCPU
  _MEMORY: 2Gi                      # Memory
  _TIMEOUT: "3600"                 # Request timeout seconds
  _MAX_INSTANCES: "10"             # Autoscaling max instances
  _MIN_INSTANCES: "0"              # Autoscaling min instances (set >0 for warm)
  _ALLOW_UNAUTH: "true"            # Allow unauthenticated invocations

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: E2_HIGHCPU_8

steps:
  # 0) Print context for easier debugging
  - name: gcr.io/cloud-builders/gcloud
    id: env-info
    entrypoint: bash
    args:
      - -lc
      - |
        set -euxo pipefail
        gcloud --version
        docker --version || true
        echo "PROJECT_ID=${PROJECT_ID}"
        echo "SHORT_SHA=${SHORT_SHA}"
        echo "BRANCH_NAME=${BRANCH_NAME:-}"
        echo "TAG_NAME=${TAG_NAME:-}"
        echo "SERVICE=${_SERVICE} REGION=${_REGION}"

  # 1) Build Docker image
  - name: gcr.io/cloud-builders/docker
    id: docker-build
    env:
      - DOCKER_BUILDKIT=1
    args:
      - build
      - "-t"
      - "${_AR_HOST}/${PROJECT_ID}/${_AR_REPO}/${_IMAGE}:${SHORT_SHA}"
      - "-f"
      - Dockerfile
      - .

  # 2) Push image to Artifact Registry
  - name: gcr.io/cloud-builders/docker
    id: docker-push
    args:
      - push
      - "${_AR_HOST}/${PROJECT_ID}/${_AR_REPO}/${_IMAGE}:${SHORT_SHA}"

  # 3) Deploy to Cloud Run
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    id: run-deploy
    entrypoint: bash
    args:
      - -lc
      - |
        set -euxo pipefail
        IMAGE="${_AR_HOST}/${PROJECT_ID}/${_AR_REPO}/${_IMAGE}:${SHORT_SHA}"
        AUTH_FLAG="--no-allow-unauthenticated"
        if [ "${_ALLOW_UNAUTH}" = "true" ]; then AUTH_FLAG="--allow-unauthenticated"; fi
        gcloud run deploy "${_SERVICE}" \
          --image "${IMAGE}" \
          --platform managed \
          --region "${_REGION}" \
          ${AUTH_FLAG} \
          --port 8080 \
          --cpu "${_CPU}" \
          --memory "${_MEMORY}" \
          --timeout "${_TIMEOUT}" \
          --max-instances "${_MAX_INSTANCES}" \
          --min-instances "${_MIN_INSTANCES}" \
          --set-env-vars R_CONFIG_ACTIVE=production,TITILER_PORT=8001

images:
  - "${_AR_HOST}/${PROJECT_ID}/${_AR_REPO}/${_IMAGE}:${SHORT_SHA}"

timeout: 3600s
